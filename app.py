from flask import Flask, request, jsonify, render_template
import os

app = Flask(__name__)

# Lista de saludos que activa el mensaje de bienvenida
saludos = ["hola", "wenas", "buenas", "qu√© m√°s", "holi", "saludos", "buen d√≠a", "empezar", "inicio", "toli", "hey"]

# Base de datos del chatbot
info = {
    "introduccion": (
        "¬°Hola! Soy ToliGuide, tu asistente tur√≠stico de Ibagu√© üá®üá¥. "
        "Te puedo recomendar sitios tur√≠sticos, hoteles y restaurantes. "
        "Escribe 'turismo', 'hoteles' o 'restaurantes' para empezar."
    ),

    "turismo": {
        "historia": {
            "plaza de bol√≠var y catedral primada": "Coraz√≥n hist√≥rico de Ibagu√©, arquitectura cl√°sica y campanas francesas.",
            "parque manuel murillo toro": "Plaza central con historia pol√≠tica.",
            "museo pan√≥ptico": "Antigua c√°rcel en cruz griega, ahora centro cultural.",
            "barrios la pola y bel√©n": "Casonas coloniales de los primeros pobladores.",
            "teatro tolima": "Joya arquitect√≥nica de 1911 con programaci√≥n cultural."
        },
        "naturaleza": {
            "jard√≠n bot√°nico san jorge": "60 ha de bosque con miradores, senderos y acceso econ√≥mico.",
            "ca√±√≥n del combeima": "Ruta natural con termales, miradores y acceso al Nevado.",
            "parque museo la martinica": "Mirador, cascadas, rappel y vistas panor√°micas.",
            "santaf√© de los guaduales": "Reserva ecol√≥gica con senderos, temazcal y hospedaje.",
            "fundaci√≥n orqu√≠deas del tolima": "160 especies propias, recorridos bot√°nicos."
        },
        "cultura": {
            "museo de arte del tolima": "Colecci√≥n de arte colombiano desde lo precolombino.",
            "museo antropol√≥gico ut": "Culturas abor√≠genes del Tolima.",
            "parque centenario y concha ac√∫stica": "Sede de festivales folcl√≥ricos.",
            "conservatorio del tolima": "Fundado en 1906, semillero de m√∫sicos.",
            "parque de la m√∫sica": "Escenario musical al aire libre con murales y esculturas."
        }
    },

    "hoteles": {
        "sonesta hotel ibagu√©": "Hotel 5‚òÖ con piscina, sauna, gimnasio y excelente reputaci√≥n (~9/10).",
        "hotel estelar altamira": "Hotel 4‚òÖ con spa, piscina, restaurante, desde $323.000 COP.",
        "casa morales": "Hotel 3¬Ω‚òÖ ideal para negocios y eventos, con piscina cubierta.",
        "hotel dann combeima": "Hotel 4‚òÖ para familias, con restaurante y buena ubicaci√≥n.",
        "eco star hotel": "Hotel econ√≥mico (~$170.000 COP), moderno y bien ubicado."
    },

    "restaurantes": {
        "sonora parrilla bar": "Carnes a la parrilla, platos t√≠picos. Ambiente moderno y familiar.",
        "sr. miyagi asian cuisine": "Comida asi√°tica (japonesa, tailandesa, china). Sabores internacionales.",
        "punta del este restaurante bar": "Parrilla, mariscos, cocina internacional. Vista y ambiente elegante.",
        "la parrilla de marcos": "Carnes a la brasa y platos t√≠picos. Muy tradicional.",
        "chorilongo": "Choripanes y comida callejera gourmet. Popular entre j√≥venes.",
        "la ricotta": "Cocina italiana, pizzas artesanales. Ambiente rom√°ntico.",
        "el fog√≥n llanero": "Comida del Llano (mamona, carne a la llanera). R√∫stico y familiar.",
        "restaurante altavista": "Cocina colombiana e internacional. Vista panor√°mica.",
        "maria y el mar": "Mariscos y cocina coste√±a. Ambiente sofisticado.",
        "la casona comida t√≠pica": "Tamal, lechona y viudo de pescado. Comida tolimense tradicional."
    }
}

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/chat', methods=['POST'])
def chat():
    user_input = request.json.get('message', '').lower()
    response = "Lo siento, no entend√≠ tu mensaje. Puedes escribir: turismo, hoteles o restaurantes."

    # Reconocimiento de saludos
    if any(s in user_input for s in saludos):
        response = info["introduccion"]

    elif "turismo" in user_input:
        response = "üèû Lugares tur√≠sticos por categor√≠a:\n"
        for categoria, lugares in info["turismo"].items():
            emoji = {"historia": "üìú", "naturaleza": "üåø", "cultura": "üé≠"}.get(categoria, "‚Ä¢")
            response += f"\n{emoji} {categoria.capitalize()}:\n" + "\n‚Ä¢ " + "\n‚Ä¢ ".join(lugares.keys()) + "\n"

    elif "hotel" in user_input:
        response = "üõå Hoteles recomendados:\n‚Ä¢ " + "\n‚Ä¢ ".join(info["hoteles"].keys())

    elif "restaurante" in user_input or "comida" in user_input:
        response = "üçΩ Restaurantes destacados:\n‚Ä¢ " + "\n‚Ä¢ ".join(info["restaurantes"].keys())

    else:
        # Buscar coincidencias por palabra clave en todos los nombres
        encontrado = False
        for categoria in ["turismo", "hoteles", "restaurantes"]:
            if categoria == "turismo":
                for subcat in info["turismo"].values():
                    for nombre, descripcion in subcat.items():
                        if any(palabra in user_input for palabra in nombre.split()):
                            response = f"{nombre.title()}:\n{descripcion}"
                            encontrado = True
                            break
                    if encontrado:
                        break
            else:
                for nombre, descripcion in info[categoria].items():
                    if any(palabra in user_input for palabra in nombre.split()):
                        response = f"{nombre.title()}:\n{descripcion}"
                        encontrado = True
                        break
            if encontrado:
                break

    return jsonify({"response": response})

if __name__ == '__main__':
    port = int(os.environ.get("PORT", 5000))
    app.run(host='0.0.0.0', port=port)
    
